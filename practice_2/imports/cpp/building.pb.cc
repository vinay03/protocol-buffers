// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: building.proto

#include "building.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)

namespace protobuf_street_2eproto {
extern PROTOBUF_INTERNAL_EXPORT_protobuf_street_2eproto ::google::protobuf::internal::SCCInfo<1> scc_info_Street;
}  // namespace protobuf_street_2eproto
class BuildingDefaultTypeInternal {
 public:
  ::google::protobuf::internal::ExplicitlyConstructed<Building>
      _instance;
} _Building_default_instance_;
namespace protobuf_building_2eproto {
static void InitDefaultsBuilding() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_Building_default_instance_;
    new (ptr) ::Building();
    ::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::Building::InitAsDefaultInstance();
}

::google::protobuf::internal::SCCInfo<1> scc_info_Building =
    {{ATOMIC_VAR_INIT(::google::protobuf::internal::SCCInfoBase::kUninitialized), 1, InitDefaultsBuilding}, {
      &protobuf_street_2eproto::scc_info_Street.base,}};

void InitDefaults() {
  ::google::protobuf::internal::InitSCC(&scc_info_Building.base);
}

::google::protobuf::Metadata file_level_metadata[1];

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Building, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Building, building_name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Building, building_number_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::Building, street_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::Building)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&::_Building_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  AssignDescriptors(
      "building.proto", schemas, file_default_instances, TableStruct::offsets,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\016building.proto\032\014street.proto\"S\n\010Buildi"
      "ng\022\025\n\rbuilding_name\030\001 \001(\t\022\027\n\017building_nu"
      "mber\030\002 \001(\r\022\027\n\006street\030\003 \001(\0132\007.Streetb\006pro"
      "to3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 123);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "building.proto", &protobuf_RegisterTypes);
  ::protobuf_street_2eproto::AddDescriptors();
}

void AddDescriptors() {
  static ::google::protobuf::internal::once_flag once;
  ::google::protobuf::internal::call_once(once, AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_building_2eproto

// ===================================================================

void Building::InitAsDefaultInstance() {
  ::_Building_default_instance_._instance.get_mutable()->street_ = const_cast< ::Street*>(
      ::Street::internal_default_instance());
}
void Building::clear_street() {
  if (GetArenaNoVirtual() == NULL && street_ != NULL) {
    delete street_;
  }
  street_ = NULL;
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Building::kBuildingNameFieldNumber;
const int Building::kBuildingNumberFieldNumber;
const int Building::kStreetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Building::Building()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  ::google::protobuf::internal::InitSCC(
      &protobuf_building_2eproto::scc_info_Building.base);
  SharedCtor();
  // @@protoc_insertion_point(constructor:Building)
}
Building::Building(const Building& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  building_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.building_name().size() > 0) {
    building_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_name_);
  }
  if (from.has_street()) {
    street_ = new ::Street(*from.street_);
  } else {
    street_ = NULL;
  }
  building_number_ = from.building_number_;
  // @@protoc_insertion_point(copy_constructor:Building)
}

void Building::SharedCtor() {
  building_name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&street_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&building_number_) -
      reinterpret_cast<char*>(&street_)) + sizeof(building_number_));
}

Building::~Building() {
  // @@protoc_insertion_point(destructor:Building)
  SharedDtor();
}

void Building::SharedDtor() {
  building_name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != internal_default_instance()) delete street_;
}

void Building::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const ::google::protobuf::Descriptor* Building::descriptor() {
  ::protobuf_building_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_building_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Building& Building::default_instance() {
  ::google::protobuf::internal::InitSCC(&protobuf_building_2eproto::scc_info_Building.base);
  return *internal_default_instance();
}


void Building::Clear() {
// @@protoc_insertion_point(message_clear_start:Building)
  ::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  building_name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (GetArenaNoVirtual() == NULL && street_ != NULL) {
    delete street_;
  }
  street_ = NULL;
  building_number_ = 0u;
  _internal_metadata_.Clear();
}

bool Building::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:Building)
  for (;;) {
    ::std::pair<::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string building_name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_building_name()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->building_name().data(), static_cast<int>(this->building_name().length()),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "Building.building_name"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // uint32 building_number = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &building_number_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // .Street street = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessage(
               input, mutable_street()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:Building)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:Building)
  return false;
#undef DO_
}

void Building::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:Building)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string building_name = 1;
  if (this->building_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_name().data(), static_cast<int>(this->building_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Building.building_name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->building_name(), output);
  }

  // uint32 building_number = 2;
  if (this->building_number() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->building_number(), output);
  }

  // .Street street = 3;
  if (this->has_street()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->_internal_street(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:Building)
}

::google::protobuf::uint8* Building::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:Building)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string building_name = 1;
  if (this->building_name().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->building_name().data(), static_cast<int>(this->building_name().length()),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "Building.building_name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->building_name(), target);
  }

  // uint32 building_number = 2;
  if (this->building_number() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->building_number(), target);
  }

  // .Street street = 3;
  if (this->has_street()) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        3, this->_internal_street(), deterministic, target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:Building)
  return target;
}

size_t Building::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:Building)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // string building_name = 1;
  if (this->building_name().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->building_name());
  }

  // .Street street = 3;
  if (this->has_street()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSize(
        *street_);
  }

  // uint32 building_number = 2;
  if (this->building_number() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::UInt32Size(
        this->building_number());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Building::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:Building)
  GOOGLE_DCHECK_NE(&from, this);
  const Building* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Building>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:Building)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:Building)
    MergeFrom(*source);
  }
}

void Building::MergeFrom(const Building& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:Building)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.building_name().size() > 0) {

    building_name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.building_name_);
  }
  if (from.has_street()) {
    mutable_street()->::Street::MergeFrom(from.street());
  }
  if (from.building_number() != 0) {
    set_building_number(from.building_number());
  }
}

void Building::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:Building)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Building::CopyFrom(const Building& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:Building)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Building::IsInitialized() const {
  return true;
}

void Building::Swap(Building* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Building::InternalSwap(Building* other) {
  using std::swap;
  building_name_.Swap(&other->building_name_, &::google::protobuf::internal::GetEmptyStringAlreadyInited(),
    GetArenaNoVirtual());
  swap(street_, other->street_);
  swap(building_number_, other->building_number_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
}

::google::protobuf::Metadata Building::GetMetadata() const {
  protobuf_building_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_building_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)
namespace google {
namespace protobuf {
template<> GOOGLE_PROTOBUF_ATTRIBUTE_NOINLINE ::Building* Arena::CreateMaybeMessage< ::Building >(Arena* arena) {
  return Arena::CreateInternal< ::Building >(arena);
}
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
